# Config data sources
spring.datasource.url= jdbc:sqlserver://localhost:1433;encrypt=true;trustServerCertificate=true;databaseName=isp392-group3
spring.datasource.username = sa
spring.datasource.password = 12345
spring.datasource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
# Config Hibernate

#Hibernate auto detect appropriate Dialect base on your DataSource config
#spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.SQLServerDialect
spring.jpa.hibernate.ddl-auto= update

#open-in-view, True: lazy-loading but easy in use
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=eldenring2309@gmail.com
spring.mail.password=qqwb pqil vzao nslh
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

# Google OAuth2 configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

jwt.signerKey=HDnx6daMHWmuu/rgl5B2F4FblmUXUwgwaP8N4UEQ1yAWqPb2SW/FeFVkCMwgMlqT

paypal.client-id=?
paypal.client-secret=?
paypal.mode=sandbox